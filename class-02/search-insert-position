## Python Solutionclass Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        start = 0;
        end = len(nums) - 1
        if target < nums[0]:
            return 0
        if target > nums[-1]:
            return end+1
        
        while (start <= end):
            mid = round((start + end)/2)
            if nums[mid] == target:
                return mid
            elif nums[mid] > target:
                end = mid - 1
            elif nums[mid] < target:
                start = mid + 1
            elif start == end:
                return start
        return start
## javascript Solution

/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number}
 */
var searchInsert = function(nums, target) {
    start = 0
    end = nums.length - 1
    if(target < nums[0]){
        return 0;
    }
    if(target > nums[-1]){
        return end + 1;
    }
    while(start <= end){
        mid = Math.floor((start + end)/2)
        if(nums[mid] == target){
            return mid
            
        }
        else if(nums[mid] > target){
            end = mid - 1
                  }
        else if(nums[mid] < target){
            start = mid + 1
                  }
        else if(start == end) {
           return start
                  }
        
         
    }
    
    return start
};



